"use strict";(self.webpackChunkpaulohernane_me=self.webpackChunkpaulohernane_me||[]).push([[4099],{6167:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var o=n(4848),a=n(5680);const r={slug:"day-6-100-days-of-code",title:"Day 6 of 100 Days of Code",description:"A slow day, but I do some things",image:"https://github.com/rickmff/100DiasDeCodigo-landing/blob/master/public/thumb.png",authors:"paulohfs",tags:["100DaysOfCode","go","English","Concurrent Programming","Process","Thread","Routine","Concurrency","Parallelism"]},l=void 0,i={permalink:"/blog/day-6-100-days-of-code",source:"@site/blog/2023-08-19-day-6-100-days-of-code.md",title:"Day 6 of 100 Days of Code",description:"A slow day, but I do some things",date:"2023-08-19T00:00:00.000Z",tags:[{label:"100DaysOfCode",permalink:"/blog/tags/100-days-of-code"},{label:"go",permalink:"/blog/tags/go"},{label:"English",permalink:"/blog/tags/english"},{label:"Concurrent Programming",permalink:"/blog/tags/concurrent-programming"},{label:"Process",permalink:"/blog/tags/process"},{label:"Thread",permalink:"/blog/tags/thread"},{label:"Routine",permalink:"/blog/tags/routine"},{label:"Concurrency",permalink:"/blog/tags/concurrency"},{label:"Parallelism",permalink:"/blog/tags/parallelism"}],readingTime:.8,hasTruncateMarker:!1,authors:[{name:"Paulo Hernane",title:"Software Engineer",url:"https://github.com/paulohfs",imageURL:"https://github.com/paulohfs.png",key:"paulohfs"}],frontMatter:{slug:"day-6-100-days-of-code",title:"Day 6 of 100 Days of Code",description:"A slow day, but I do some things",image:"https://github.com/rickmff/100DiasDeCodigo-landing/blob/master/public/thumb.png",authors:"paulohfs",tags:["100DaysOfCode","go","English","Concurrent Programming","Process","Thread","Routine","Concurrency","Parallelism"]},unlisted:!1,prevItem:{title:"Day 7 of 100 Days of Code",permalink:"/blog/day-7-100-days-of-code"},nextItem:{title:"Day 5 of 100 Days of Code",permalink:"/blog/day-5-100-days-of-code"}},s={authorsImageUrls:[void 0]},c=[];function u(e){const t={a:"a",code:"code",li:"li",p:"p",ul:"ul",...(0,a.RP)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"Today was a slow day for me, I can't concentrate to study, but I do some things."}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["Study about Concurrency and Parallelism in general. I see the diferences an learning that they are concepts that are related, but not the same thing. I write a ",(0,o.jsx)(t.a,{href:"https://paulohfs.github.io//my-brain/concurrent-programming/concurrency-vs-parallelism",children:"node"})," about it."]}),"\n",(0,o.jsxs)(t.li,{children:["I study Golang, start to build a Rest API using a tutorial, but I don't finish it because I fell that I need to learn more about the syntax and the language itself. So I build a validate CPF function with some unit tests, and I learn about the ",(0,o.jsx)(t.code,{children:"go test"})," command. The validate CPF is a nice function to implement in a new language because its need a lot of things like: string manipulation, loops, type conversion, and more. So it is nice to now what you need to now about a new language!"]}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:["Want to know about the 100 Days of Code Challenge? Check it out ",(0,o.jsx)(t.a,{href:"https://www.100daysofcode.com/",children:"here"}),". ",(0,o.jsx)(t.a,{href:"https://www.100diasdecodigo.dev/",children:"PT-BR"})]})]})}function d(e={}){const{wrapper:t}={...(0,a.RP)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},5680:(e,t,n)=>{n.d(t,{RP:()=>c});var o=n(6540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),c=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),g=c(n),p=a,m=g["".concat(s,".").concat(p)]||g[p]||u[p]||r;return n?o.createElement(m,l(l({ref:t},d),{},{components:n})):o.createElement(m,l({ref:t},d))}));d.displayName="MDXCreateElement"}}]);