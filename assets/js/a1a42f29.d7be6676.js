"use strict";(self.webpackChunkpaulohernane_me=self.webpackChunkpaulohernane_me||[]).push([[7649],{8400:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=n(4848),o=n(5680);const a={id:"godot-autoloads",title:"Autoloads"},c=void 0,s={id:"godot/godot-autoloads",title:"Autoloads",description:"AutoLoads are a way to shared data between scenes in Godot.",source:"@site/my-brain/godot/autoloads.md",sourceDirName:"godot",slug:"/godot/godot-autoloads",permalink:"/my-brain/godot/godot-autoloads",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"godot-autoloads",title:"Autoloads"},sidebar:"myBrainSidebar",previous:{title:"Gamedev with Godot",permalink:"/my-brain/godot/"},next:{title:"Changing Scenes",permalink:"/my-brain/godot/changing-scenes"}},i={},l=[];function d(e){const t={p:"p",...(0,o.RP)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"AutoLoads are a way to shared data between scenes in Godot.\nThey are always load on the scene tree and can be accessed from any script."}),"\n",(0,r.jsx)(t.p,{children:"We can use autoloads to store global variables, constants, or functions that we want to be available in all scenes."})]})}function u(e={}){const{wrapper:t}={...(0,o.RP)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},5680:(e,t,n)=>{n.d(t,{RP:()=>l});var r=n(6540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),l=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(n),f=o,b=p["".concat(i,".").concat(f)]||p[f]||d[f]||a;return n?r.createElement(b,c(c({ref:t},u),{},{components:n})):r.createElement(b,c({ref:t},u))}));u.displayName="MDXCreateElement"}}]);