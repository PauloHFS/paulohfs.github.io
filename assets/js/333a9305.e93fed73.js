"use strict";(self.webpackChunkpaulohernane_me=self.webpackChunkpaulohernane_me||[]).push([[6598],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},m=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),u=l(n),h=a,d=u["".concat(c,".").concat(h)]||u[h]||p[h]||o;return n?r.createElement(d,s(s({ref:t},m),{},{components:n})):r.createElement(d,s({ref:t},m))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=h;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[u]="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},5953:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const o={id:"Inter-Process Communication",title:"inter-process-communication",tags:["Distributed Systems","Inter-Process Communication","IPC"]},s="Inter-Process Communication (IPC)",i={unversionedId:"Inter-Process Communication",id:"Inter-Process Communication",title:"inter-process-communication",description:"All the time the processes need to communicate with each other to exchange information, like a server with a database, this process is called Inter-Process Communication.",source:"@site/my-brain/interprocess-communication.md",sourceDirName:".",slug:"/Inter-Process Communication",permalink:"/my-brain/Inter-Process Communication",draft:!1,tags:[{label:"Distributed Systems",permalink:"/my-brain/tags/distributed-systems"},{label:"Inter-Process Communication",permalink:"/my-brain/tags/inter-process-communication"},{label:"IPC",permalink:"/my-brain/tags/ipc"}],version:"current",frontMatter:{id:"Inter-Process Communication",title:"inter-process-communication",tags:["Distributed Systems","Inter-Process Communication","IPC"]},sidebar:"myBrainSidebar",previous:{title:"Signals",permalink:"/my-brain/godot/godot-signals"},next:{title:"What I am learning",permalink:"/my-brain/what-i-am-learning"}},c={},l=[{value:"Shared Memory",id:"shared-memory",level:2},{value:"Sockets",id:"sockets",level:2},{value:"Message Queues",id:"message-queues",level:2},{value:"references",id:"references",level:3}],m={toc:l},u="wrapper";function p(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"inter-process-communication-ipc"},"Inter-Process Communication (IPC)"),(0,a.kt)("p",null,"All the time the processes need to communicate with each other to exchange information, like a server with a database, this process is called ",(0,a.kt)("strong",{parentName:"p"},"Inter-Process Communication"),"."),(0,a.kt)("p",null,"There various methods to implements IPC, like:"),(0,a.kt)("h2",{id:"shared-memory"},"Shared Memory"),(0,a.kt)("p",null,"To communicate with shared memory, a process create a space in the memory with other process can access."),(0,a.kt)("p",null,"Advantages:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"fast, the processes don't need to copy the data to send to other process they access the same area in memory.")),(0,a.kt)("p",null,"Disadvantages:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"not scalable, the processes need to be in the same machine."),(0,a.kt)("li",{parentName:"ul"},"the processes need to be synchronized to access the shared memory, you had to guarantee the mutual exclusion.")),(0,a.kt)("h2",{id:"sockets"},"Sockets"),(0,a.kt)("p",null,"Sockets are a common way to communicate between processes, usually the processes are in different machines (network sockets). The processes communicate at one time and exchange some data then the connection is closed."),(0,a.kt)("p",null,"Advantages:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"scalable, the processes can be in different machines."),(0,a.kt)("li",{parentName:"ul"},"the processes can be in different languages, the only thing they need to know is the protocol to communicate."),(0,a.kt)("li",{parentName:"ul"},"communications is asynchronous based in events.")),(0,a.kt)("p",null,"Disadvantages:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"each process need to connect simultaneously to communicate.")),(0,a.kt)("p",null,"Examples:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"real time chats"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/WebSocket"},"Web Sockets"))),(0,a.kt)("h2",{id:"message-queues"},"Message Queues"),(0,a.kt)("p",null,"Message queues are like sockets, but the processes don't need to be connected at the same time, the process send a message to a queue and the other process read the message from the queue."),(0,a.kt)("p",null,"Advantages:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"scalable, the processes can be in different machines."),(0,a.kt)("li",{parentName:"ul"},"the processes can be in different languages, the only thing they need to know is the protocol to communicate."),(0,a.kt)("li",{parentName:"ul"},"asynchronous, the processes don't need to be connected at the same time."),(0,a.kt)("li",{parentName:"ul"},"the message can be stored in the queue until the other process read it.")),(0,a.kt)("p",null,"Disadvantages:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"the message can be lost if the queue is not persistent.")),(0,a.kt)("h3",{id:"references"},"references"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Inter-process_communication"},"https://en.wikipedia.org/wiki/Inter-process_communication")))}p.isMDXComponent=!0}}]);