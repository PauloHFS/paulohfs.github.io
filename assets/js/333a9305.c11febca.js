"use strict";(self.webpackChunkpaulohernane_me=self.webpackChunkpaulohernane_me||[]).push([[5728],{2334:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var s=t(4848),r=t(5680);const i={id:"Inter-Process Communication",title:"inter-process-communication",tags:["Distributed Systems","Inter-Process Communication","IPC"]},o="Inter-Process Communication (IPC)",c={id:"Inter-Process Communication",title:"inter-process-communication",description:"All the time the processes need to communicate with each other to exchange information, like a server with a database, this process is called Inter-Process Communication.",source:"@site/my-brain/interprocess-communication.md",sourceDirName:".",slug:"/Inter-Process Communication",permalink:"/my-brain/Inter-Process Communication",draft:!1,unlisted:!1,tags:[{label:"Distributed Systems",permalink:"/my-brain/tags/distributed-systems"},{label:"Inter-Process Communication",permalink:"/my-brain/tags/inter-process-communication"},{label:"IPC",permalink:"/my-brain/tags/ipc"}],version:"current",frontMatter:{id:"Inter-Process Communication",title:"inter-process-communication",tags:["Distributed Systems","Inter-Process Communication","IPC"]},sidebar:"myBrainSidebar",previous:{title:"Signals",permalink:"/my-brain/godot/godot-signals"},next:{title:"Javascript",permalink:"/my-brain/javascript/"}},a={},l=[{value:"Shared Memory",id:"shared-memory",level:2},{value:"Sockets",id:"sockets",level:2},{value:"Message Queues",id:"message-queues",level:2},{value:"references",id:"references",level:3}];function h(e){const n={a:"a",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.RP)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"inter-process-communication-ipc",children:"Inter-Process Communication (IPC)"}),"\n",(0,s.jsxs)(n.p,{children:["All the time the processes need to communicate with each other to exchange information, like a server with a database, this process is called ",(0,s.jsx)(n.strong,{children:"Inter-Process Communication"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"There various methods to implements IPC, like:"}),"\n",(0,s.jsx)(n.h2,{id:"shared-memory",children:"Shared Memory"}),"\n",(0,s.jsx)(n.p,{children:"To communicate with shared memory, a process create a space in the memory with other process can access."}),"\n",(0,s.jsx)(n.p,{children:"Advantages:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"fast, the processes don't need to copy the data to send to other process they access the same area in memory."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Disadvantages:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"not scalable, the processes need to be in the same machine."}),"\n",(0,s.jsx)(n.li,{children:"the processes need to be synchronized to access the shared memory, you had to guarantee the mutual exclusion."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"sockets",children:"Sockets"}),"\n",(0,s.jsx)(n.p,{children:"Sockets are a common way to communicate between processes, usually the processes are in different machines (network sockets). The processes communicate at one time and exchange some data then the connection is closed."}),"\n",(0,s.jsx)(n.p,{children:"Advantages:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"scalable, the processes can be in different machines."}),"\n",(0,s.jsx)(n.li,{children:"the processes can be in different languages, the only thing they need to know is the protocol to communicate."}),"\n",(0,s.jsx)(n.li,{children:"communications is asynchronous based in events."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Disadvantages:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"each process need to connect simultaneously to communicate."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Examples:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"real time chats"}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/WebSocket",children:"Web Sockets"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"message-queues",children:"Message Queues"}),"\n",(0,s.jsx)(n.p,{children:"Message queues are like sockets, but the processes don't need to be connected at the same time, the process send a message to a queue and the other process read the message from the queue."}),"\n",(0,s.jsx)(n.p,{children:"Advantages:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"scalable, the processes can be in different machines."}),"\n",(0,s.jsx)(n.li,{children:"the processes can be in different languages, the only thing they need to know is the protocol to communicate."}),"\n",(0,s.jsx)(n.li,{children:"asynchronous, the processes don't need to be connected at the same time."}),"\n",(0,s.jsx)(n.li,{children:"the message can be stored in the queue until the other process read it."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Disadvantages:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"the message can be lost if the queue is not persistent."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"references",children:"references"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Inter-process_communication",children:"Inter-process communication"})})]})}function m(e={}){const{wrapper:n}={...(0,r.RP)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},5680:(e,n,t)=>{t.d(n,{RP:()=>l});var s=t(6540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);n&&(s=s.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,s)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,s,r=function(e,n){if(null==e)return{};var t,s,r={},i=Object.keys(e);for(s=0;s<i.length;s++)t=i[s],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(s=0;s<i.length;s++)t=i[s],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var a=s.createContext({}),l=function(e){var n=s.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},h={inlineCode:"code",wrapper:function(e){var n=e.children;return s.createElement(s.Fragment,{},n)}},m=s.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,a=e.parentName,m=c(e,["components","mdxType","originalType","parentName"]),d=l(t),u=r,p=d["".concat(a,".").concat(u)]||d[u]||h[u]||i;return t?s.createElement(p,o(o({ref:n},m),{},{components:t})):s.createElement(p,o({ref:n},m))}));m.displayName="MDXCreateElement"}}]);