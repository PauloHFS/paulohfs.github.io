"use strict";(self.webpackChunkpaulohernane_me=self.webpackChunkpaulohernane_me||[]).push([[2834],{4574:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"data-science/machine-learning/machine-learning-and-data-science-course/time-series","title":"Time Series","description":"Time series data is a sequence of data points collected at regular intervals over time. It is used in various fields such as finance, economics, weather forecasting, and signal processing. Time series analysis involves analyzing, modeling, and forecasting the patterns in the data.","source":"@site/my-brain/data-science/machine-learning/machine-learning-and-data-science-course/time-series.md","sourceDirName":"data-science/machine-learning/machine-learning-and-data-science-course","slug":"/data-science/machine-learning/machine-learning-and-data-science-course/time-series","permalink":"/my-brain/data-science/machine-learning/machine-learning-and-data-science-course/time-series","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"time-series","permalink":"/my-brain/tags/time-series"},{"inline":true,"label":"forecasting","permalink":"/my-brain/tags/forecasting"},{"inline":true,"label":"data-preprocessing","permalink":"/my-brain/tags/data-preprocessing"}],"version":"current","frontMatter":{"id":"time-series","title":"Time Series","tags":["time-series","forecasting","data-preprocessing"]},"sidebar":"myBrainSidebar","previous":{"title":"Resampling","permalink":"/my-brain/data-science/machine-learning/machine-learning-and-data-science-course/resampling"},"next":{"title":"Machine Learning Specialist Course","permalink":"/my-brain/data-science/machine-learning/machine-learning-specialist-course/"}}');var a=i(4848),s=i(8453);const r={id:"time-series",title:"Time Series",tags:["time-series","forecasting","data-preprocessing"]},o=void 0,l={},d=[{value:"Time Series Decomposition",id:"time-series-decomposition",level:2},{value:"Predicting Time Series",id:"predicting-time-series",level:2},{value:"ARIMA (AutoRegressive Integrated Moving Average)",id:"arima-autoregressive-integrated-moving-average",level:3},{value:"Split time series data",id:"split-time-series-data",level:3},{value:"Ploting the predictions",id:"ploting-the-predictions",level:3},{value:"Prophet",id:"prophet",level:2}];function c(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"Time series data is a sequence of data points collected at regular intervals over time. It is used in various fields such as finance, economics, weather forecasting, and signal processing. Time series analysis involves analyzing, modeling, and forecasting the patterns in the data."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"import pandas as pd\n\ndata = {\n    'Month': ['2021-01', '2021-02', '2021-03', '2021-04', '2021-05'],\n    'value': [100, 120, 130, 140, 150]\n}\n\ndf = pd.DataFrame(data)\n\ndataparser = lambda date: pd.datetime.strptime(date, '%Y-%m')\n\n# Load the data\n# Month,Value\ndf = pd.read_csv('data.csv', parse_dates=['Month'], index_col='Month', date_parser=dataparser)\n\ntime_series = df['value']\n\n# Query the data\ntime_series['2021-06']\ntime_series['2021-01':'2021-03']\ntime_series[:'2021-02']\ntime_series.max()\n\n# Plot the data\ntime_series.plot()\n\n# Group by year\ntime_series.resample('Y').sum()\n\n# Group by month\ntime_series.resample('M').sum()\ntime_series.groupby(lambda x:x.month).sum()\n"})}),"\n",(0,a.jsx)(n.h2,{id:"time-series-decomposition",children:"Time Series Decomposition"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"from statsmodels.tsa.seasonal import seasonal_decompose\n\ndecomposition = seasonal_decompose(time_series)\ntendency = decomposition.trend\nseasonal = decomposition.seasonal\nrandom = decomposition.resid\n"})}),"\n",(0,a.jsx)(n.p,{children:"You can plot the components to visualize the decomposition."}),"\n",(0,a.jsx)(n.h2,{id:"predicting-time-series",children:"Predicting Time Series"}),"\n",(0,a.jsx)(n.h3,{id:"arima-autoregressive-integrated-moving-average",children:"ARIMA (AutoRegressive Integrated Moving Average)"}),"\n",(0,a.jsx)(n.p,{children:"ARIMA is a popular time series forecasting model that combines autoregressive (AR), differencing (I), and moving average (MA) components."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"! pip install pmdarima\nfrom pmdarima import auto_arima\n\n# Fit the model\nmodel = auto_arima(time_series)\n# params order=(P, Q ,D). P is the order of the autoregressive part, Q is the order of the moving average part, and D is the order of the differencing. You need to find the best values for these parameters our use auto_arima to find the best values.\n\nmodel.order\n\n# Forecast the next 12 months\npredictions = model.predict(n_periods=12)\n"})}),"\n",(0,a.jsx)(n.h3,{id:"split-time-series-data",children:"Split time series data"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"train = time_series[:'2021-03']\ntest = time_series['2021-04':]\n"})}),"\n",(0,a.jsx)(n.h3,{id:"ploting-the-predictions",children:"Ploting the predictions"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"import matplotlib.pyplot as plt\n\nmodel = auto_arima(train)\npredictions = model.predict(n_periods=len(test))\n\nplt.plot(train.index, train, label='Train')\nplt.plot(test.index, test, label='Test')\nplt.plot(test.index, predictions, label='Predictions')\nplt.legend()\nplt.show();\n"})}),"\n",(0,a.jsx)(n.h2,{id:"prophet",children:"Prophet"}),"\n",(0,a.jsx)(n.p,{children:"Prophet is a forecasting tool developed by Facebook that is designed for analyzing time series data that display patterns on different time scales."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"! pip install fbprophet\nfrom fbprophet import Prophet\n\n# Load the data\ndata = {\n    'ds': ['2021-01', '2021-02', '2021-03', '2021-04', '2021-05'],\n    'y': [100, 120, 130, 140, 150]\n}\n\ndf = pd.DataFrame(data)\n\nmodel = Prophet()\nmodel.fit(df)\n\nfuture = model.make_future_dataframe(periods=12)\nforecast = model.predict(future)\n\nforecast.head()\n\nmodel.plot(forecast)\n\nmodel.plot_components(forecast)\n\n# Plot the forecast using Plotly\nfrom fbprophet.plot import plot_plotly, plot_components_plotly\n\nplot_plotly(model, forecast)\n\nplot_components_plotly(model, forecast)\n\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"yhat: the forecasted value"}),"\n",(0,a.jsx)(n.li,{children:"yhat_lower: the lower bound of the forecast"}),"\n",(0,a.jsx)(n.li,{children:"yhat_upper: the upper bound of the forecast"}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>o});var t=i(6540);const a={},s=t.createContext(a);function r(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);