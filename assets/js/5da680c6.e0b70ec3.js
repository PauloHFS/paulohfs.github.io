"use strict";(self.webpackChunkpaulohernane_me=self.webpackChunkpaulohernane_me||[]).push([[998],{5094:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var t=r(4848),i=r(5680);const o={id:"drive-development",title:"Driver Development",tags:["linux","driver","development"]},l=void 0,a={id:"linux/driver-development/drive-development",title:"Driver Development",description:"The most simple drive code had to have the functions moduleinit and moduleexit to initialize and finalize the module. This are C macros that are defined in the linux/init.h header file.",source:"@site/my-brain/linux/driver-development/index.md",sourceDirName:"linux/driver-development",slug:"/linux/driver-development/",permalink:"/my-brain/linux/driver-development/",draft:!1,unlisted:!1,tags:[{label:"linux",permalink:"/my-brain/tags/linux"},{label:"driver",permalink:"/my-brain/tags/driver"},{label:"development",permalink:"/my-brain/tags/development"}],version:"current",frontMatter:{id:"drive-development",title:"Driver Development",tags:["linux","driver","development"]},sidebar:"myBrainSidebar",previous:{title:"Linux",permalink:"/my-brain/linux/"},next:{title:"Driver",permalink:"/my-brain/linux/driver"}},d={},c=[];function s(e){const n={code:"code",p:"p",pre:"pre",...(0,i.RP)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["The most simple drive code had to have the functions ",(0,t.jsx)(n.code,{children:"module_init"})," and ",(0,t.jsx)(n.code,{children:"module_exit"})," to initialize and finalize the module. This are C macros that are defined in the ",(0,t.jsx)(n.code,{children:"linux/init.h"})," header file."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:"\n### module_init\n\nThis register the constructor function of the module. This function is called when the module is loaded into the kernel. In this function we can register the device driver, allocate resources, and initialize the driver.\n\n### module_exit\n\nThis register the destructor function of the module. This function is called when the module is removed from the kernel. In this function we can unregister the device driver, free resources, and finalize the driver.\n"})})]})}function u(e={}){const{wrapper:n}={...(0,i.RP)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(s,{...e})}):s(e)}},5680:(e,n,r)=>{r.d(n,{RP:()=>c});var t=r(6540);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function l(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function a(e,n){if(null==e)return{};var r,t,i=function(e,n){if(null==e)return{};var r,t,i={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(i[r]=e[r]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var d=t.createContext({}),c=function(e){var n=t.useContext(d),r=n;return e&&(r="function"==typeof e?e(n):l(l({},n),e)),r},s={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var r=e.components,i=e.mdxType,o=e.originalType,d=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),m=c(r),p=i,f=m["".concat(d,".").concat(p)]||m[p]||s[p]||o;return r?t.createElement(f,l(l({ref:n},u),{},{components:r})):t.createElement(f,l({ref:n},u))}));u.displayName="MDXCreateElement"}}]);