"use strict";(self.webpackChunkpaulohernane_me=self.webpackChunkpaulohernane_me||[]).push([[2396],{5619:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>m,frontMatter:()=>t,metadata:()=>c,toc:()=>s});var r=a(4848),l=a(5680);const t={id:"make-and-makefile",title:"Make and Makefile",tags:["make","makefile"]},i=void 0,c={id:"linux/driver-development/make-and-makefile",title:"Make and Makefile",description:"Make",source:"@site/my-brain/linux/driver-development/make-and-makefile.md",sourceDirName:"linux/driver-development",slug:"/linux/driver-development/make-and-makefile",permalink:"/my-brain/linux/driver-development/make-and-makefile",draft:!1,unlisted:!1,tags:[{label:"make",permalink:"/my-brain/tags/make"},{label:"makefile",permalink:"/my-brain/tags/makefile"}],version:"current",frontMatter:{id:"make-and-makefile",title:"Make and Makefile",tags:["make","makefile"]},sidebar:"myBrainSidebar",previous:{title:"Driver Development",permalink:"/my-brain/linux/driver-development/"},next:{title:"Driver",permalink:"/my-brain/linux/driver"}},o={},s=[{value:"Make",id:"make",level:2},{value:"Usage",id:"usage",level:3},{value:"Makefile",id:"makefile",level:2},{value:"Syntax",id:"syntax",level:3},{value:"Example",id:"example",level:3},{value:"Variables",id:"variables",level:3}];function d(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.RP)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"make",children:"Make"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"make"})," is a automation tool that helps we to executing commands in a more organized way. It is used to compile and build large projects, but it can be used for any task that requires executing a series of commands."]}),"\n",(0,r.jsxs)(n.p,{children:["Its usefull when we have a project with multiple files and we need to compile them in a specific order. Instead of compiling each file manually, we can use ",(0,r.jsx)(n.code,{children:"make"})," to automate the process."]}),"\n",(0,r.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"make [target]\n\n# passing a Makefile\n\nmake -f /foo/bar/Makefile [target]\n\n"})}),"\n",(0,r.jsx)(n.h2,{id:"makefile",children:"Makefile"}),"\n",(0,r.jsxs)(n.p,{children:["A ",(0,r.jsx)(n.code,{children:"Makefile"})," is a file that contains a set of rules used by ",(0,r.jsx)(n.code,{children:"make"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"syntax",children:"Syntax"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-makefile",children:"target: dependencies\n    command\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"target"}),": The name of the target to be executed."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"dependencies"}),": The files or targets that the target depends on. If any of the dependencies are newer than the target, the command will be executed."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"command"}),": The command to be executed."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-makefile",children:"hello: hello.c\n    gcc -o hello hello.c\n"})}),"\n",(0,r.jsxs)(n.p,{children:["In this example, we have a target called ",(0,r.jsx)(n.code,{children:"hello"})," that depends on the file ",(0,r.jsx)(n.code,{children:"hello.c"}),". The command ",(0,r.jsx)(n.code,{children:"gcc -o hello hello.c"})," is executed to compile the ",(0,r.jsx)(n.code,{children:"hello.c"})," file."]}),"\n",(0,r.jsx)(n.h3,{id:"variables",children:"Variables"}),"\n",(0,r.jsxs)(n.p,{children:["Variables can be defined in a ",(0,r.jsx)(n.code,{children:"Makefile"})," to store values that can be reused throughout the file."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-makefile",children:"CC = gcc\nCFLAGS = -Wall -Wextra\nPATH += /usr/local/bin # append to PATH\n\nhello: hello.c\n    $(CC) $(CFLAGS) -o hello hello.c\n"})})]})}function m(e={}){const{wrapper:n}={...(0,l.RP)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},5680:(e,n,a)=>{a.d(n,{RP:()=>s});var r=a(6540);function l(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function t(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?t(Object(a),!0).forEach((function(n){l(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):t(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function c(e,n){if(null==e)return{};var a,r,l=function(e,n){if(null==e)return{};var a,r,l={},t=Object.keys(e);for(r=0;r<t.length;r++)a=t[r],n.indexOf(a)>=0||(l[a]=e[a]);return l}(e,n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(r=0;r<t.length;r++)a=t[r],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var o=r.createContext({}),s=function(e){var n=r.useContext(o),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var a=e.components,l=e.mdxType,t=e.originalType,o=e.parentName,m=c(e,["components","mdxType","originalType","parentName"]),h=s(a),u=l,p=h["".concat(o,".").concat(u)]||h[u]||d[u]||t;return a?r.createElement(p,i(i({ref:n},m),{},{components:a})):r.createElement(p,i({ref:n},m))}));m.displayName="MDXCreateElement"}}]);